/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.IPersonaDAO;
import Entidades.Persona;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author oscar
 */
public class frmHistorial extends javax.swing.JFrame {
    
    /**
     * Objeto de tipo IpersonaDAO
     */
    private final IPersonaDAO personaDao;

    /**
     * MÃ©todo constructor que inicializa los atributos
     */
    public frmHistorial(IPersonaDAO personaDao) {
        initComponents();
        this.personaDao = personaDao;
        llenarTabla();
    }

    /**
     * Metodo que se encarga de llenar la tabla
     * dependiendo del filtro que el usuario utilice
     */
    public void llenarTabla() {
        boolean nombreB = !(txtNombre.getText().isEmpty());
        boolean rfcB = !(txtRFC.getText().isEmpty());
        boolean fechaNB = txtFechaN.getDate() != null;
        List<Persona> personasSimilares = new ArrayList<Persona>();
        List<Persona> ListafechaN = new ArrayList<Persona>();
        List<Persona> Listarfc = personaDao.listaPersonasRFC(this.txtRFC.getText());
        List<Persona> ListaAuxiliarNombre = personaDao.listaPersona();
        List<Persona> Listanombre = new ArrayList<Persona>();
        for (int i = 0; i < ListaAuxiliarNombre.size(); i++) {
            if (nombreB) {
                String nombreCompleto=ListaAuxiliarNombre.get(i).getNombre()+" "+ListaAuxiliarNombre.get(i).getApellidoP()+" "+ListaAuxiliarNombre.get(i).getApellidoM();
                
            if(nombreCompleto.toLowerCase().contains(txtNombre.getText().toLowerCase())){
                Listanombre.add(ListaAuxiliarNombre.get(i));
            }

            }
        }

        if (txtFechaN.getDate() != null) {
            ListafechaN = personaDao.listaPersonasFechaN(txtFechaN.getDate());

        }

        if (nombreB && rfcB && fechaNB) {
            for (Persona persona : Listanombre) {
                if (Listarfc.contains(persona) && ListafechaN.contains(persona)) {
                    personasSimilares.add(persona);
                }

            }
        } else if (nombreB && rfcB && !fechaNB) {
            for (Persona persona : Listanombre) {
                if (Listarfc.contains(persona)) {
                    personasSimilares.add(persona);
                }

            }
        } else if (nombreB && !rfcB && fechaNB) {
            for (Persona persona : Listanombre) {
                if (ListafechaN.contains(persona)) {
                    personasSimilares.add(persona);
                }
            }
        } else if (nombreB && !rfcB && !fechaNB) {

            personasSimilares = Listanombre;

        } else if (!nombreB && rfcB && fechaNB) {
            for (Persona persona : ListafechaN) {
                if (Listarfc.contains(persona)) {
                    personasSimilares.add(persona);
                }

            }
        } else if (!nombreB && rfcB && !fechaNB) {

            personasSimilares = Listarfc;
        } else if (!nombreB && !rfcB && fechaNB) {

            personasSimilares = ListafechaN;
        } else {
            personasSimilares = personaDao.listaPersona();
        }

        DefaultTableModel modelo = (DefaultTableModel) tblHistorial.getModel();
        modelo.setRowCount(0);
        for (int i = 0; i < personasSimilares.size(); i++) {
            Object[] datos = new Object[modelo.getColumnCount()];
            datos[0] = personasSimilares.get(i).getNombre() + " " + personasSimilares.get(i).getApellidoP() + " " + personasSimilares.get(i).getApellidoM();
            datos[1] = personasSimilares.get(i).getRfc();
            datos[2] = personasSimilares.get(i).getFechaN();
            modelo.addRow(datos);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistorial = new javax.swing.JTable();
        btnRegresar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtRFC = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        txtFechaN = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel24 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "RFC", "Fecha de nacimiento"
            }
        ));
        jScrollPane1.setViewportView(tblHistorial);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 450, 120));

        btnRegresar.setBackground(new java.awt.Color(0, 153, 204));
        btnRegresar.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("Regresar");
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setOpaque(true);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 420, -1, -1));

        btnAceptar.setBackground(new java.awt.Color(0, 153, 204));
        btnAceptar.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.setText("Aceptar");
        btnAceptar.setContentAreaFilled(false);
        btnAceptar.setOpaque(true);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 420, -1, -1));

        txtNombre.setForeground(new java.awt.Color(204, 204, 204));
        txtNombre.setBorder(null);
        txtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNombreMousePressed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 130, -1));

        txtRFC.setForeground(new java.awt.Color(204, 204, 204));
        txtRFC.setBorder(null);
        txtRFC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtRFCMousePressed(evt);
            }
        });
        txtRFC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRFCKeyReleased(evt);
            }
        });
        jPanel1.add(txtRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 120, -1));

        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 150, 20));

        txtFechaN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(txtFechaN, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 180, -1));

        jLabel11.setFont(new java.awt.Font("Roboto Medium", 1, 36)); // NOI18N
        jLabel11.setText("CONSULTAS");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/city.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/favicon.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel22.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel22.setText("Nombre");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel23.setFont(new java.awt.Font("Roboto Light", 1, 24)); // NOI18N
        jLabel23.setText("Consultar Por");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel21.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel21.setText("RFC");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, -1, 20));

        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 170, 20));

        jLabel24.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel24.setText("Fecha de Nacimiento");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo que se encarga de regresar al menu principal
     * @param evt 
     */
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        
        frmMenuPrincipal principal = new frmMenuPrincipal();
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

     /**
     * Metodo que se encarga de aceptar los filtros
     * que el usuario desea utilizar
     * @param evt 
     */
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        
        llenarTabla();
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * Metodo para que mientras vayas escribiendo en un txt
     * se vaya llenando la tabla
     * @param evt 
     */
    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
         llenarTabla();
    }//GEN-LAST:event_txtNombreKeyReleased

     /**
     * Metodo para que mientras vayas escribiendo en un txt
     * se vaya llenando la tabla
     * @param evt 
     */
    private void txtRFCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRFCKeyReleased
         llenarTabla();
    }//GEN-LAST:event_txtRFCKeyReleased
    /**
     * MÃ©todo para aparentar un placeholder
     * @param evt evt
     */
    private void txtNombreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMousePressed
       txtNombre.setText("");
       txtNombre.setForeground(Color.black);
    }//GEN-LAST:event_txtNombreMousePressed
    /**
     * MÃ©todo para aparentar un placeholder
     * @param evt evt
     */
    private void txtRFCMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRFCMousePressed
       txtRFC.setText("");
       txtRFC.setForeground(Color.black);
    }//GEN-LAST:event_txtRFCMousePressed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable tblHistorial;
    private com.toedter.calendar.JDateChooser txtFechaN;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    // End of variables declaration//GEN-END:variables
}
